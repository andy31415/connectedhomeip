# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")

import("$dir_pw_build/python.gni")

# Defines a target that runs code generation based on
# scripts/codegen.py
#
# Arguments:
#   idl
#     Name of the matter file to use to start the code generation
#
#   generator
#     Name of the generator to use (e.g. java, cpp-app)
#
#
# Example usage:
#
#  chip_codegen("java-jni-generate") {
#    idl = "controler-clusters.matter"
#    generator = "java"
#  }
#
template("chip_codegen") {
  _name = target_name
  _generator = invoker.generator

  pw_python_action(_name) {
    script = "${chip_root}/scripts/codegen.py"

    _idl_file = invoker.idl
    _output_files =
        exec_script("${chip_root}/scripts/codegen.py",
                    [
                      "--generator",
                      _generator,
                      "--log-level",
                      "fatal",
                      "--name-only",
                      rebase_path(_idl_file, root_build_dir),
                    ],
                    "list lines",
                    [ "controller-clusters.matter" ])

    args = [
      "--generator",
      _generator,
      "--output-dir",
      rebase_path(target_gen_dir, root_build_dir),
      rebase_path(_idl_file, root_build_dir),
    ]

    deps = [ "${chip_root}/scripts/idl" ]

    inputs = [ _idl_file ]
    sources = [ _idl_file ]
    outputs = []

    foreach(name, _output_files) {
      outputs += [ "$target_gen_dir/${name}" ]
    }
  }
}
